{"version":3,"file":"index.es.js","sources":["../src/context.js","../src/styled.js","../src/try-render.js","../src/AccordionFold.js"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState\n} from 'react';\nimport T from 'prop-types';\n\n// Context\nconst AccordionContext = createContext(null);\n\n/**\n * Context provider for the accordion.\n * Stores the data needed for the accordions to work. Accordions should be\n * wrapped in the <AccordionManager>\n *\n * @prop {node} children Children to render.\n */\nexport function AccordionManager({ children, allowMultiple }) {\n  const [expandedFolds, setExpandedFolds] = useState([]);\n  const [foldList, setFoldList] = useState([]);\n\n  const setExpandedState = useCallback(\n    ({ id, expanded = false }) => {\n      // Remove from list.\n      if (!expanded) {\n        setExpandedFolds((list) => list.filter((t) => t !== id));\n      } else {\n        // Add to list\n        if (allowMultiple) {\n          setExpandedFolds((list) => {\n            const foldSet = new Set(list);\n            foldSet.add(id);\n            return Array.from(foldSet);\n          });\n        } else {\n          setExpandedFolds([id]);\n        }\n      }\n    },\n    [allowMultiple]\n  );\n\n  const toggleExpanded = useCallback(\n    ({ id }) => {\n      const isExpanded = expandedFolds.includes(id);\n      setExpandedState({ id, expanded: !isExpanded });\n    },\n    [expandedFolds, setExpandedState]\n  );\n\n  const registerFold = useCallback(\n    ({ id, expanded }) => {\n      setFoldList((list) => {\n        const foldSet = new Set(list);\n        foldSet.add(id);\n        return Array.from(foldSet);\n      });\n\n      if (expanded) {\n        setExpandedState({ id, expanded });\n      }\n    },\n    [setExpandedState]\n  );\n\n  const unregisterFold = useCallback(({ id }) => {\n    setFoldList((list) => list.filter((t) => t !== id));\n  }, []);\n\n  const value = {\n    foldList,\n    setFoldList,\n    expandedFolds,\n    setExpandedFolds,\n\n    registerFold,\n    unregisterFold,\n    setExpandedState,\n    toggleExpanded\n  };\n\n  return (\n    <AccordionContext.Provider value={value}>\n      {children}\n    </AccordionContext.Provider>\n  );\n}\n\nAccordionManager.propTypes = {\n  children: T.node,\n  allowMultiple: T.bool\n};\n\nexport function useAccordionFold(foldId, isInitialOpen = false) {\n  const context = useContext(AccordionContext);\n\n  if (!context) {\n    throw new Error(\n      `The \\`useAccordionFold\\` hook must be used inside the <AccordionContext> component's context.`\n    );\n  }\n\n  if (!foldId) {\n    throw new Error(`A \\`foldId\\` is required to use Accordion folds.`);\n  }\n\n  const {\n    registerFold,\n    unregisterFold,\n    expandedFolds,\n    toggleExpanded,\n    setExpandedState\n  } = context;\n\n  useEffect(() => {\n    if (foldId) {\n      registerFold({ id: foldId, expanded: isInitialOpen });\n    }\n\n    return () => {\n      unregisterFold({ id: foldId });\n    };\n  }, [foldId, isInitialOpen, registerFold, unregisterFold]);\n\n  return {\n    isExpanded: expandedFolds.includes(foldId),\n    toggleExpanded: useCallback(\n      () => toggleExpanded({ id: foldId }),\n      [foldId, toggleExpanded]\n    ),\n    setExpandedState: useCallback(\n      (expanded) => setExpandedState({ id: foldId, expanded }),\n      [foldId, setExpandedState]\n    )\n  };\n}\n\nexport function useAccordion() {\n  const context = useContext(AccordionContext);\n\n  if (!context) {\n    throw new Error(\n      `The \\`useAccordion\\` hook must be used inside the <AccordionContext> component's context.`\n    );\n  }\n\n  const { foldList, setExpandedFolds } = context;\n\n  return {\n    ...context,\n    expandAll: useCallback(\n      () => setExpandedFolds(foldList),\n      [setExpandedFolds, foldList]\n    ),\n    collapseAll: useCallback(() => setExpandedFolds([]), [setExpandedFolds])\n  };\n}\n","import styled from 'styled-components';\n\nimport { themeVal, glsp } from '@devseed-ui/theme-provider';\nimport { CollecticonChevronDownSmall } from '@devseed-ui/collecticons';\n\nexport const AccordionFoldSelf = styled.section`\n  display: grid;\n  background: ${themeVal('color.surface')};\n  border-radius: ${themeVal('shape.rounded')};\n`;\n\nexport const AccordionFoldHeader = styled.header`\n  box-shadow: 0 1px 0 0 ${themeVal('color.base-100a')};\n`;\n\nexport const AccordionFoldTrigger = styled.button`\n  display: flex;\n  align-items: center;\n  padding: ${glsp()};\n  text-decoration: none;\n  border: 0;\n  background: inherit;\n  color: inherit;\n  width: 100%;\n  cursor: pointer;\n\n  ${CollecticonChevronDownSmall} {\n    transition: transform 240ms ease-in-out;\n    transform: ${({ isExpanded }) =>\n      isExpanded ? 'rotate(180deg)' : 'rotate(0deg)'};\n    margin-left: auto;\n  }\n`;\n\nexport const AccordionFoldBody = styled.div`\n  overflow: hidden;\n  transition: ${({ isExpanded }) =>\n    isExpanded\n      ? 'max-height 320ms ease-in-out, opacity 160ms ease-in-out'\n      : 'max-height 320ms ease-in-out, opacity 160ms ease-in-out 160ms'};\n  opacity: ${({ isExpanded }) => (isExpanded ? 1 : 0)};\n  max-height: ${({ isExpanded }) => (isExpanded ? '400vh' : 0)};\n`;\n\nexport const AccordionFoldBodyInner = styled.div`\n  box-shadow: 0 1px 0 0 ${themeVal('color.base-100a')};\n  background: ${themeVal('color.base-50a')};\n  padding: ${glsp()};\n`;\n","import React from 'react';\n\n/**\n * Tries to render the given function falling back to the children if it is not\n * set.\n *\n * @param {function} fn The render function to try to run\n * @param {node} children The fallback if the render function is not set\n * @prop {any} rest Remaining props are passed to the function\n */\nexport default function Try(props) {\n  /* eslint-disable-next-line react/prop-types */\n  const { fn: F, children, ...rest } = props;\n\n  if (React.isValidElement(F)) {\n    return <F {...props} />;\n  } else if (typeof F === 'function') {\n    return F(rest);\n  } else {\n    return children || null;\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\nimport styled from 'styled-components';\n\nimport { CollecticonChevronDownSmall } from '@devseed-ui/collecticons';\n\nimport {\n  AccordionFoldSelf,\n  AccordionFoldHeader,\n  AccordionFoldTrigger,\n  AccordionFoldBody,\n  AccordionFoldBodyInner\n} from './styled';\nimport { useAccordionFold } from './context';\nimport Try from './try-render';\nimport { Heading } from '@devseed-ui/typography';\n\n/**\n * React Accordion Fold component.\n *\n * @param {string} id An id for the fold\n * @param {string} className Classname for the fold.\n * @param {string} title Title to use on the fold header. Required unless\n *                 renderHeader is being used.\n * @param {node} content Content for the fold. Required unless\n *               renderBody is being used.\n * @param {function} renderHeader Overrides the fold header element.\n *                   Anything returned by this function is rendered instead of\n *                   `AccordionFoldHeader`.\n *                   Signature: fn(bag). Bag has the following props:\n *                     {boolean} isExpanded Whether or not this fold\n *                               is expanded.\n *                     {function} setExpandedState Method to change the fold\n *                                state by passing a boolean with the new state.\n * @param {function} renderBody Overrides the fold body element.\n *                   Anything returned by this function is rendered instead of\n *                   `AccordionFoldBodyInner`.\n *                   Signature: fn(bag). Bag has the following props:\n *                     {boolean} isExpanded Whether or not this fold\n *                               is expanded.\n *                     {function} setExpandedState Method to change the fold\n *                                state by passing a boolean with the new state.\n *\n */\nfunction AccordionFoldCmp({\n  id,\n  title,\n  content,\n  headingAs,\n  initialOpen,\n  renderBody,\n  renderHeader,\n  ...rest\n}) {\n  const { isExpanded, setExpandedState, toggleExpanded } = useAccordionFold(\n    id,\n    initialOpen\n  );\n\n  const onTriggerClick = (e) => {\n    e.preventDefault();\n    toggleExpanded();\n  };\n\n  const contentId = `accordion-${id}-content`;\n\n  const fnBag = {\n    contentId,\n    isExpanded,\n    setExpandedState,\n    toggleExpanded\n  };\n\n  return (\n    <AccordionFoldSelf id={id} {...rest}>\n      <Try contentId={contentId} fn={renderHeader} {...fnBag}>\n        <AccordionFoldHeader>\n          <Heading size='small' as={headingAs}>\n            <AccordionFoldTrigger\n              isExpanded={isExpanded}\n              onClick={onTriggerClick}\n              aria-controls={contentId}\n              aria-expanded={isExpanded}\n            >\n              {title}\n              <CollecticonChevronDownSmall\n                title={\n                  isExpanded\n                    ? 'Contract accordion icon'\n                    : 'Expand accordion icon'\n                }\n              />\n            </AccordionFoldTrigger>\n          </Heading>\n        </AccordionFoldHeader>\n      </Try>\n      <AccordionFoldBody\n        id={contentId}\n        isExpanded={isExpanded}\n        aria-hidden={!isExpanded}\n      >\n        <Try fn={renderBody} {...fnBag}>\n          <AccordionFoldBodyInner>{content}</AccordionFoldBodyInner>\n        </Try>\n      </AccordionFoldBody>\n    </AccordionFoldSelf>\n  );\n}\n\nAccordionFoldCmp.propTypes = {\n  id: T.string.isRequired,\n  initialOpen: T.bool,\n  title: T.node,\n  headingAs: T.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  content: T.node,\n  renderBody: T.func,\n  renderHeader: T.func\n};\n\nexport const AccordionFold = styled(AccordionFoldCmp)`\n  /* No default styles. Created as a styled component to allow overrides */\n`;\n"],"names":["AccordionContext","createContext","AccordionManager","children","allowMultiple","useState","expandedFolds","setExpandedFolds","foldList","setFoldList","setExpandedState","useCallback","id","expanded","list","filter","t","foldSet","Set","add","Array","from","toggleExpanded","isExpanded","includes","registerFold","unregisterFold","value","propTypes","T","node","bool","useAccordionFold","foldId","isInitialOpen","context","useContext","Error","useEffect","useAccordion","expandAll","collapseAll","AccordionFoldSelf","styled","section","themeVal","AccordionFoldHeader","header","AccordionFoldTrigger","button","glsp","CollecticonChevronDownSmall","AccordionFoldBody","div","AccordionFoldBodyInner","Try","props","F","fn","rest","React","isValidElement","AccordionFoldCmp","title","content","headingAs","initialOpen","renderBody","renderHeader","onTriggerClick","e","preventDefault","contentId","fnBag","string","isRequired","oneOf","func","AccordionFold"],"mappings":"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"}