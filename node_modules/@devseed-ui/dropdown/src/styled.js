import styled, { css } from 'styled-components';
import { tint } from 'polished';
import {
  glsp,
  stylizeFunction,
  themeVal,
  rgba,
  disabled
} from '@devseed-ui/theme-provider';
import { Overline } from '@devseed-ui/typography';

const _tint = stylizeFunction(tint);

const transitions = {
  up: {
    start: () => css`
      opacity: 0;
      transform: translate(0, ${glsp()});
    `,
    end: () => css`
      opacity: 1;
      transform: translate(0, ${glsp(-1)});
    `
  },
  down: {
    start: () => css`
      opacity: 0;
      transform: translate(0, ${glsp(-1)});
    `,
    end: () => css`
      opacity: 1;
      transform: translate(0, ${glsp()});
    `
  },
  left: {
    start: () => css`
      opacity: 0;
      transform: translate(${glsp()}, 0);
    `,
    end: () => css`
      opacity: 1;
      transform: translate(${glsp(-1)}, 0);
    `
  },
  right: {
    start: () => css`
      opacity: 0;
      transform: translate(${glsp(-1)}, 0);
    `,
    end: () => css`
      opacity: 1;
      transform: translate(${glsp()}, 0);
    `
  }
};

export const DropContent = styled.div`
  background: ${themeVal('color.surface')};
  border-radius: ${themeVal('shape.rounded')};
  box-shadow: 0 0 0 1px ${themeVal('color.base-100a')},
    ${themeVal('boxShadow.elevationD')};
  position: relative;
  z-index: 1000;
  width: 100vw;
  max-width: 14rem;
  padding: ${glsp()};
  text-align: left;
  color: ${themeVal('type.base.color')};
  transition: opacity 0.16s ease, transform 0.16s ease;

  .tether-target-attached-top.tether-element-attached-bottom & {
    ${transitions.up.end}

    &.drop-trans-exit {
      ${transitions.up.end}
    }

    &.drop-trans-exit-active {
      ${transitions.up.start}
    }
  }

  .tether-target-attached-bottom.tether-element-attached-top & {
    ${transitions.down.end}

    &.drop-trans-exit {
      ${transitions.down.end}
    }

    &.drop-trans-exit-active {
      ${transitions.down.start}
    }
  }

  .tether-target-attached-right.tether-element-attached-left & {
    ${transitions.right.end}

    &.drop-trans-exit {
      ${transitions.right.end}
    }

    &.drop-trans-exit-active {
      ${transitions.right.start}
    }
  }

  .tether-target-attached-left.tether-element-attached-right & {
    ${transitions.left.end}

    &.drop-trans-exit {
      ${transitions.left.end}
    }

    &.drop-trans-exit-active {
      ${transitions.left.start}
    }
  }

  &&.drop-trans-appear,
  &&.drop-trans-enter {
    ${({ direction }) => transitions[direction].start}
  }

  &&.drop-trans-enter-active,
  &&.drop-trans-appear-active {
    ${({ direction }) => transitions[direction].end}
  }

  &&.drop-trans-exit {
    ${({ direction }) => transitions[direction].end}
  }

  &&.drop-trans-exit-active {
    ${({ direction }) => transitions[direction].start}
  }
`;

// Drop content elements.
const dropTitleAttrs = (props) => ({
  as: props.as || 'h6'
});
export const DropTitle = styled(Overline).attrs(dropTitleAttrs)`
  margin: ${glsp(0, 0, 1, 0)};
`;

export const DropMenu = styled.ul`
  list-style: none;
  margin: ${glsp(-1, -1, 1, -1)};
  box-shadow: 0 ${themeVal('layout.border')} 0 0 ${themeVal('color.base-100a')};
  padding: ${glsp(0.5, 0)};
  min-width: 12rem;
  font-family: ${themeVal('type.base.family')};
  font-weight: ${themeVal('type.base.bold')};

  &:last-child {
    margin-bottom: ${glsp(-1)};
    box-shadow: none;
  }
`;

export const DropMenuItem = styled.a`
  position: relative;
  display: flex;
  gap: ${glsp(0.5)};
  align-items: center;
  padding: ${glsp(0.25, 1)};
  color: ${themeVal('type.base.color')};
  text-decoration: none;
  transition: all 0.16s ease 0s;

  &:visited {
    color: inherit;
  }

  &:hover,
  &:focus {
    color: ${themeVal('color.link')};
    background-color: ${rgba(themeVal('color.link'), 0.12)};
    opacity: 1;
  }

  ${({ active }) =>
    active &&
    css`
      &,
      &:visited {
        background-color: ${rgba(themeVal('color.link'), 0.08)};
        color: ${themeVal('color.link')};
      }

      &::before {
        position: absolute;
        top: 0;
        left: 0;
        width: 0.25rem;
        height: 100%;
        background: ${themeVal('color.link')};
        content: '';
        pointer-events: none;
      }
    `}

  ${({ disabled: d }) =>
    d &&
    css`
      ${disabled()};
    `}
`;

export const DropInset = styled.div`
  background: ${themeVal('color.base-50')};
  color: ${_tint(0.32, themeVal('type.base.color'))};
  box-shadow: inset 0 ${themeVal('layout.border')} 0 0
      ${themeVal('color.base-100a')},
    inset 0 -${themeVal('layout.border')} 0 0 ${themeVal('color.base-100a')};
  margin: ${glsp(-1, -1, 1, -1)};
  padding: ${glsp()};

  &:first-child {
    box-shadow: inset 0 -${themeVal('layout.border')} 0 0 ${themeVal('color.base-100a')};
  }

  &:last-child {
    margin-bottom: ${glsp(-1)};
    box-shadow: inset 0 ${themeVal('layout.border')} 0 0
      ${themeVal('color.base-100a')};
    border-radius: 0 0 ${themeVal('shape.rounded')} ${themeVal('shape.rounded')};
  }

  &:only-child {
    box-shadow: none;
  }

  > *:first-child {
    margin-top: 0;
  }

  > *:last-child {
    margin-bottom: 0;
  }
`;
