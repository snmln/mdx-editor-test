{"version":3,"file":"index.es.js","sources":["../src/vertical-divider.js","../src/context.js","../src/toolbar.js"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nimport { themeVal, glsp } from '@devseed-ui/theme-provider';\n\nconst renderDividerVariation = ({ variation }) => {\n  if (variation === 'light') {\n    return css`\n      background: transparent\n        linear-gradient(\n          90deg,\n          ${themeVal('color.surface-100a')},\n          ${themeVal('color.surface-100a')}\n        )\n        50% / ${themeVal('layout.border')} auto no-repeat;\n    `;\n  }\n\n  // Default: variation === 'dark'\n  return css`\n    background: transparent\n      linear-gradient(\n        90deg,\n        ${themeVal('color.base-200a')},\n        ${themeVal('color.base-200a')}\n      )\n      50% / ${themeVal('layout.border')} auto no-repeat;\n  `;\n};\n\nexport const VerticalDivider = styled.hr`\n  display: inline-flex;\n  border: 0;\n  width: ${glsp(1 / 2)};\n  height: ${glsp()};\n  margin: 0;\n\n  ${renderDividerVariation}\n`;\n","import React, { createContext, useContext, useMemo } from 'react';\nimport T from 'prop-types';\nimport { Button } from '@devseed-ui/button';\n\n// The toolbar context is used so that the toolbar children can respond to\n// global toolbar props, like the size.\n\n// Context\nconst ToolbarContext = createContext({ inToolbar: false });\n\n// Context provider\nexport const ToolbarProvider = (props) => {\n  const { children, size } = props;\n\n  const contextValue = useMemo(() => ({ inToolbar: true, size }), [size]);\n\n  return (\n    <ToolbarContext.Provider value={contextValue}>\n      {children}\n    </ToolbarContext.Provider>\n  );\n};\n\nToolbarProvider.propTypes = {\n  children: T.node,\n  size: T.oneOf(['small', 'medium', 'large'])\n};\n\n// Context consumer\nexport const useToolbar = () => {\n  // It should be possible to use the hook outside the toolbar to allow\n  // component reusability.\n  return useContext(ToolbarContext);\n};\n\nexport const ToolbarContextButton = React.forwardRef((props, ref) => {\n  const { size } = useToolbar();\n  /* eslint-disable-next-line react/prop-types */\n  return <Button {...props} size={size || props.size} ref={ref} />;\n});\nToolbarContextButton.displayName = 'ToolbarContextButton';\n","import React from 'react';\nimport T from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport { createOverlineStyles } from '@devseed-ui/typography';\nimport { themeVal, glsp, truncated } from '@devseed-ui/theme-provider';\n\nimport { ToolbarProvider, ToolbarContextButton } from './context';\n\nfunction ToolbarComponent({ className, children, size, ...rest }) {\n  return (\n    <ToolbarProvider size={size}>\n      <div className={className} role='toolbar' {...rest}>\n        {children}\n      </div>\n    </ToolbarProvider>\n  );\n}\n\nToolbarComponent.propTypes = {\n  className: T.string,\n  children: T.node,\n  size: T.string\n};\n\nconst setSpacingVariable = ({ size }) => {\n  switch (size) {\n    case 'small':\n      return css`\n        --toolbar-spacing: ${glsp(0.125)};\n      `;\n    case 'large':\n      return css`\n        --toolbar-spacing: ${glsp(0.5)};\n      `;\n    case 'xlarge':\n      return css`\n        --toolbar-spacing: ${glsp()};\n      `;\n    // medium\n    default:\n      return css`\n        --toolbar-spacing: ${glsp(0.25)};\n      `;\n  }\n};\n\nexport const Toolbar = styled(ToolbarComponent)`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n\n  ${setSpacingVariable}\n  gap: var(--toolbar-spacing);\n`;\n\nexport const ToolbarGroup = styled.div.attrs((props) => {\n  return {\n    role: props.role || 'group'\n  };\n})`\n  all: inherit;\n\n  & + & {\n    margin-left: calc(var(--toolbar-spacing) * 4);\n  }\n`;\n\nexport const ToolbarLabel = styled.span`\n  ${createOverlineStyles()}\n  ${truncated()}\n  color: ${({ variation }) =>\n    variation === 'light'\n      ? themeVal('color.surface')\n      : themeVal('color.base-400')};\n`;\n\nexport const ToolbarButton = styled(ToolbarContextButton)`\n  /* styled-component */\n`;\n\nexport const ToolbarIconButton = styled(ToolbarButton).attrs({\n  fitting: 'skinny'\n})`\n  /* styled-component */\n`;\n"],"names":["renderDividerVariation","variation","css","themeVal","VerticalDivider","styled","hr","glsp","ToolbarContext","createContext","inToolbar","ToolbarProvider","props","children","size","contextValue","useMemo","propTypes","T","node","oneOf","useToolbar","useContext","ToolbarContextButton","React","forwardRef","ref","displayName","ToolbarComponent","className","rest","string","setSpacingVariable","Toolbar","ToolbarGroup","div","attrs","role","ToolbarLabel","span","createOverlineStyles","truncated","ToolbarButton","ToolbarIconButton","fitting"],"mappings":"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"}