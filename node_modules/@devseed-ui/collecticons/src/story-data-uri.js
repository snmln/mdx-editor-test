import React from 'react';
import styled from 'styled-components';
import { theme as devseedUITheme } from '@devseed-ui/theme-provider';

import * as Icons from './index';
import { iconDataURI } from './collecticon-creator';

const DataURIWrapper = styled.div`
  padding: 1rem;
  display: grid;
  gap: 1rem;

  img {
    display: inline-block;
  }
`;

const collecticonBookDataUri = (props) =>
  iconDataURI(Icons.CollecticonBook, {
    color: props.theme.color.primary
  });

const ElIcon = styled.span`
  display: inline-flex;
  align-items: baseline;

  &::before {
    display: inline-block;
    align-self: center;
    content: '';
    background-image: url('${collecticonBookDataUri}');
    background-repeat: no-repeat;
    background-size: 1rem 1rem;
    width: 1rem;
    height: 1rem;
  }
`;

export const IconsDataUri = (args) => {
  const dataURI = iconDataURI(Icons.CollecticonFolder, {
    size: args.size,
    color: devseedUITheme.main.color[args.color]
  });
  return (
    <DataURIWrapper>
      <p>
        Icons can be converted to data URIs to be used as the source of images{' '}
        <img src={dataURI} alt='Collecticons as data URI' /> and even as
        background in pseudo <ElIcon>css elements</ElIcon>. <br />
        In both cases props are supported to customize the icon
      </p>
    </DataURIWrapper>
  );
};
